{"version":3,"file":"hue-0320b821-bundle-3c690b33b5f47cc0d68b.js","sources":["webpack:///./desktop/core/src/desktop/js/ext/fileuploader.custom.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n Multiple file upload component with progress-bar, drag-and-drop.\n http://github.com/valums/file-uploader\n\n Copyright (C) 2011 by Andris Valums\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\nimport $ from 'jquery'; //\n// Helper functions\n//\n\nvar qq = {};\n/**\n * Adds all missing properties from second obj to first obj\n */\n\nqq.extend = function (first, second) {\n  for (var prop in second) {\n    first[prop] = second[prop];\n  }\n};\n/**\n * Searches for a given element in the array, returns -1 if it is not present.\n * @param {Number} [from] The index at which to begin the search\n */\n\n\nqq.indexOf = function (arr, elt, from) {\n  if (arr.indexOf) return arr.indexOf(elt, from);\n  from = from || 0;\n  var len = arr.length;\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in arr && arr[from] === elt) {\n      return from;\n    }\n  }\n\n  return -1;\n};\n\nqq.getUniqueId = function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n}(); //\n// Events\n\n\nqq.attach = function (element, type, fn) {\n  if (element.addEventListener) {\n    element.addEventListener(type, fn, false);\n  } else if (element.attachEvent) {\n    element.attachEvent('on' + type, fn);\n  }\n};\n\nqq.detach = function (element, type, fn) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, fn, false);\n  } else if (element.attachEvent) {\n    element.detachEvent('on' + type, fn);\n  }\n};\n\nqq.preventDefault = function (e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n  } else {\n    e.returnValue = false;\n  }\n}; //\n// Node manipulations\n\n/**\n * Insert node a before node b.\n */\n\n\nqq.insertBefore = function (a, b) {\n  b.parentNode.insertBefore(a, b);\n};\n\nqq.remove = function (element) {\n  element.parentNode.removeChild(element);\n};\n\nqq.contains = function (parent, descendant) {\n  // compareposition returns false in this case\n  if (parent == descendant) return true;\n\n  if (parent.contains) {\n    return parent.contains(descendant);\n  } else {\n    return !!(descendant.compareDocumentPosition(parent) & 8);\n  }\n};\n/**\n * Creates and returns element from html string\n * Uses innerHTML to create an element\n */\n\n\nqq.toElement = function () {\n  var div = document.createElement('div');\n  return function (html) {\n    div.innerHTML = html;\n    var element = div.firstChild;\n    div.removeChild(element);\n    return element;\n  };\n}(); //\n// Node properties and attributes\n\n/**\n * Sets styles for an element.\n * Fixes opacity in IE6-8.\n */\n\n\nqq.css = function (element, styles) {\n  if (styles.opacity != null) {\n    if (typeof element.style.opacity != 'string' && typeof element.filters != 'undefined') {\n      styles.filter = 'alpha(opacity=' + Math.round(100 * styles.opacity) + ')';\n    }\n  }\n\n  qq.extend(element.style, styles);\n};\n\nqq.hasClass = function (element, name) {\n  var re = new RegExp('(^| )' + name + '( |$)');\n  return re.test(element.className);\n};\n\nqq.addClass = function (element, name) {\n  if (!qq.hasClass(element, name)) {\n    element.className += ' ' + name;\n  }\n};\n\nqq.removeClass = function (element, name) {\n  var re = new RegExp('(^| )' + name + '( |$)');\n  element.className = element.className.replace(re, ' ').replace(/^\\s+|\\s+$/g, \"\");\n};\n\nqq.setText = function (element, text) {\n  element.innerText = text;\n  element.textContent = text;\n}; //\n// Selecting elements\n\n\nqq.children = function (element) {\n  var children = [],\n      child = element.firstChild;\n\n  while (child) {\n    if (child.nodeType == 1) {\n      children.push(child);\n    }\n\n    child = child.nextSibling;\n  }\n\n  return children;\n};\n\nqq.getByClass = function (element, className) {\n  if (element.querySelectorAll) {\n    return element.querySelectorAll('.' + className);\n  }\n\n  var result = [];\n  var candidates = element.getElementsByTagName(\"*\");\n  var len = candidates.length;\n\n  for (var i = 0; i < len; i++) {\n    if (qq.hasClass(candidates[i], className)) {\n      result.push(candidates[i]);\n    }\n  }\n\n  return result;\n};\n/**\n * obj2url() takes a json-object as argument and generates\n * a querystring. pretty much like jQuery.param()\n *\n * how to use:\n *\n *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n *\n * will result in:\n *\n *    `http://any.url/upload?otherParam=value&a=b&c=d`\n *\n * @param  Object JSON-Object\n * @param  String current querystring-part\n * @return String encoded querystring\n */\n\n\nqq.obj2url = function (obj, temp, prefixDone) {\n  var uristrings = [],\n      prefix = '&',\n      add = function add(nextObj, i) {\n    var nextTemp = temp ? /\\[\\]$/.test(temp) ? // prevent double-encoding\n    temp : temp + '[' + i + ']' : i;\n\n    if (nextTemp != 'undefined' && i != 'undefined') {\n      uristrings.push(_typeof(nextObj) === 'object' ? qq.obj2url(nextObj, nextTemp, true) : Object.prototype.toString.call(nextObj) === '[object Function]' ? encodeURIComponent(nextTemp) + '=' + encodeURIComponent(nextObj()) : encodeURIComponent(nextTemp) + '=' + encodeURIComponent(nextObj));\n    }\n  };\n\n  if (!prefixDone && temp) {\n    prefix = /\\?/.test(temp) ? /\\?$/.test(temp) ? '' : '&' : '?';\n    uristrings.push(temp);\n    uristrings.push(qq.obj2url(obj));\n  } else if (Object.prototype.toString.call(obj) === '[object Array]' && typeof obj != 'undefined') {\n    // we wont use a for-in-loop on an array (performance)\n    for (var i = 0, len = obj.length; i < len; ++i) {\n      add(obj[i], i);\n    }\n  } else if (typeof obj != 'undefined' && obj !== null && _typeof(obj) === \"object\") {\n    // for anything else but a scalar, we will use for-in-loop\n    for (var i in obj) {\n      add(obj[i], i);\n    }\n  } else {\n    uristrings.push(encodeURIComponent(temp) + '=' + encodeURIComponent(obj));\n  }\n\n  return uristrings.join(prefix).replace(/^&/, '').replace(/%20/g, '+');\n}; //\n//\n// Uploader Classes\n//\n//\n\n/**\n * Creates upload button, validates upload, but doesn't create file list or dd.\n */\n\n\nqq.FileUploaderBasic = function (o) {\n  this._options = {\n    // set to true to see the server response\n    debug: false,\n    action: '/server/upload',\n    dest: '/',\n    fileFieldLabel: 'hdfs_file',\n    params: {},\n    button: null,\n    multiple: true,\n    maxConnections: 3,\n    // validation\n    allowedExtensions: [],\n    sizeLimit: 0,\n    minSizeLimit: 0,\n    // events\n    // return false to cancel submit\n    onSubmit: function onSubmit(id, fileName) {},\n    onProgress: function onProgress(id, fileName, loaded, total) {},\n    onComplete: function onComplete(id, fileName, responseJSON) {},\n    onCancel: function onCancel(id, fileName) {},\n    // messages\n    messages: {\n      typeError: \"{file} has invalid extension. Only {extensions} are allowed.\",\n      sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n      minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n      emptyError: \"{file} is empty, please select files again without it.\",\n      onLeave: \"The files are being uploaded, if you leave now the upload will be cancelled.\"\n    },\n    showMessage: function showMessage(message) {\n      alert(message);\n    }\n  };\n  qq.extend(this._options, o); // number of files being uploaded\n\n  this._filesInProgress = 0;\n  this._handler = this._createUploadHandler();\n\n  if (this._options.button) {\n    this._button = this._createUploadButton(this._options.button);\n  }\n\n  this._preventLeaveInProgress();\n};\n\nqq.FileUploaderBasic.prototype = {\n  setParams: function setParams(params) {\n    this._options.params = params;\n  },\n  getInProgress: function getInProgress() {\n    return this._filesInProgress;\n  },\n  _createUploadButton: function _createUploadButton(element) {\n    var self = this;\n    return new qq.UploadButton({\n      element: element,\n      multiple: this._options.multiple && qq.UploadHandlerXhr.isSupported(),\n      onChange: function onChange(input) {\n        self._onInputChange(input);\n      }\n    });\n  },\n  _createUploadHandler: function _createUploadHandler() {\n    var self = this,\n        handlerClass;\n\n    if (qq.UploadHandlerXhr.isSupported()) {\n      handlerClass = 'UploadHandlerXhr';\n    } else {\n      handlerClass = 'UploadHandlerForm';\n    }\n\n    var handler = new qq[handlerClass]({\n      debug: this._options.debug,\n      action: this._options.action,\n      dest: '/',\n      fileFieldLabel: 'hdfs_file',\n      maxConnections: this._options.maxConnections,\n      onProgress: function onProgress(id, fileName, loaded, total) {\n        self._onProgress(id, fileName, loaded, total);\n\n        self._options.onProgress(id, fileName, loaded, total);\n      },\n      onComplete: function onComplete(id, fileName, result) {\n        self._onComplete(id, fileName, result);\n\n        self._options.onComplete(id, fileName, result);\n      },\n      onCancel: function onCancel(id, fileName) {\n        self._onCancel(id, fileName);\n\n        self._options.onCancel(id, fileName);\n      }\n    });\n    return handler;\n  },\n  _preventLeaveInProgress: function _preventLeaveInProgress() {\n    var self = this;\n    qq.attach(window, 'beforeunload', function (e) {\n      if (!self._filesInProgress) {\n        return;\n      }\n\n      var e = e || window.event; // for ie, ff\n\n      e.returnValue = self._options.messages.onLeave; // for webkit\n\n      return self._options.messages.onLeave;\n    });\n  },\n  _onSubmit: function _onSubmit(id, fileName) {\n    this._filesInProgress++;\n  },\n  _onProgress: function _onProgress(id, fileName, loaded, total) {},\n  _onComplete: function _onComplete(id, fileName, result) {\n    this._filesInProgress--;\n\n    if (result.error) {\n      this._options.showMessage(result.error);\n    }\n  },\n  _onCancel: function _onCancel(id, fileName) {\n    this._filesInProgress--;\n  },\n  _onInputChange: function _onInputChange(input) {\n    if (this._handler instanceof qq.UploadHandlerXhr) {\n      this._uploadFileList(input.files);\n    } else {\n      if (this._validateFile(input)) {\n        this._uploadFile(input);\n      }\n    }\n\n    this._button.reset();\n  },\n  _uploadFileList: function _uploadFileList(files) {\n    for (var i = 0; i < files.length; i++) {\n      if (!this._validateFile(files[i])) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < files.length; i++) {\n      this._uploadFile(files[i]);\n    }\n  },\n  _uploadFile: function _uploadFile(fileContainer) {\n    var id = this._handler.add(fileContainer);\n\n    var fileName = this._handler.getName(id);\n\n    if (this._options.onSubmit(id, fileName) !== false) {\n      this._onSubmit(id, fileName);\n\n      this._handler.upload(id, this._options.params);\n    }\n  },\n  _validateFile: function _validateFile(file) {\n    var name, size;\n\n    if (file.value) {\n      // it is a file input\n      // get input value and remove path to normalize\n      name = file.value.replace(/.*(\\/|\\\\)/, \"\");\n    } else {\n      // fix missing properties in Safari\n      name = file.fileName != null ? file.fileName : file.name;\n      size = file.fileSize != null ? file.fileSize : file.size;\n    }\n\n    if (!this._isAllowedExtension(name)) {\n      this._error('typeError', name);\n\n      return false;\n    } else if (size === 0) {\n      this._error('emptyError', name);\n\n      return false;\n    } else if (size && this._options.sizeLimit && size > this._options.sizeLimit) {\n      this._error('sizeError', name);\n\n      return false;\n    } else if (size && size < this._options.minSizeLimit) {\n      this._error('minSizeError', name);\n\n      return false;\n    }\n\n    return true;\n  },\n  _error: function _error(code, fileName) {\n    var message = this._options.messages[code];\n\n    function r(name, replacement) {\n      message = message.replace(name, replacement);\n    }\n\n    r('{file}', this._formatFileName(fileName));\n    r('{extensions}', this._options.allowedExtensions.join(', '));\n    r('{sizeLimit}', this._formatSize(this._options.sizeLimit));\n    r('{minSizeLimit}', this._formatSize(this._options.minSizeLimit));\n\n    this._options.showMessage(message);\n  },\n  _formatFileName: function _formatFileName(name) {\n    if (name.length > 33) {\n      name = name.slice(0, 19) + '...' + name.slice(-13);\n    }\n\n    return name;\n  },\n  _isAllowedExtension: function _isAllowedExtension(fileName) {\n    var ext = -1 !== fileName.indexOf('.') ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\n    var allowed = this._options.allowedExtensions;\n\n    if (!allowed.length) {\n      return true;\n    }\n\n    for (var i = 0; i < allowed.length; i++) {\n      if (allowed[i].toLowerCase() == ext) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  _formatSize: function _formatSize(bytes) {\n    var i = -1;\n\n    do {\n      bytes = bytes / 1024;\n      i++;\n    } while (bytes > 99);\n\n    return Math.max(bytes, 0.1).toFixed(1) + ['kB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\n  }\n};\n/**\n * Class that creates upload widget with drag-and-drop and file list\n * @inherits qq.FileUploaderBasic\n */\n\nqq.FileUploader = function (o) {\n  // call parent constructor\n  qq.FileUploaderBasic.apply(this, arguments); // additional options\n\n  qq.extend(this._options, {\n    element: null,\n    // if set, will be used instead of qq-upload-list in template\n    listElement: null,\n    template: '<div class=\"qq-uploader\">' + '<div class=\"qq-upload-drop-area\"><span>Drop files here to upload</span></div>' + '<div class=\"qq-upload-button\">Upload a file</div>' + '<ul class=\"qq-upload-list\"></ul>' + '</div>',\n    // template for one item in file list\n    fileTemplate: '<li>' + '<span class=\"qq-upload-file\"></span>' + '<span class=\"qq-upload-spinner\"></span>' + '<span class=\"qq-upload-size\"></span>' + '<a class=\"qq-upload-cancel\" href=\"#\">Cancel</a>' + '<span class=\"qq-upload-failed-text\">Failed</span>' + '</li>',\n    classes: {\n      // used to get elements from templates\n      button: 'qq-upload-button',\n      drop: 'qq-upload-drop-area',\n      dropActive: 'qq-upload-drop-area-active',\n      list: 'qq-upload-list',\n      file: 'qq-upload-file',\n      extendedFileName: 'qq-upload-file-extended',\n      spinner: 'qq-upload-spinner',\n      size: 'qq-upload-size',\n      cancel: 'qq-upload-cancel',\n      // added to list item when upload completes\n      // used in css to hide progress spinner\n      success: 'qq-upload-success',\n      fail: 'qq-upload-fail'\n    }\n  }); // overwrite options with user supplied\n\n  this._options.dest = \"\";\n  this._options.fileFieldLabel = \"\";\n  qq.extend(this._options, o);\n  this._element = this._options.element;\n  this._element.innerHTML = this._options.template;\n  this._listElement = this._options.listElement || this._find(this._element, 'list');\n  this._classes = this._options.classes;\n  this._button = this._createUploadButton(this._find(this._element, 'button'));\n\n  this._bindCancelEvent();\n\n  this._bindCancelAllEvent();\n\n  this._setupDragDrop();\n}; // inherit from Basic Uploader\n\n\nqq.extend(qq.FileUploader.prototype, qq.FileUploaderBasic.prototype);\nqq.extend(qq.FileUploader.prototype, {\n  /**\n   * Gets one of the elements listed in this._options.classes\n   **/\n  _find: function _find(parent, type, skipIfNotFound) {\n    var element = qq.getByClass(parent, this._options.classes[type])[0];\n\n    if (!element && typeof skipIfNotFound === 'undefined') {\n      throw new Error('element not found ' + type);\n    }\n\n    return element;\n  },\n  _setupDragDrop: function _setupDragDrop() {\n    var self = this,\n        dropArea = this._find(this._element, 'drop');\n\n    var dz = new qq.UploadDropZone({\n      element: dropArea,\n      onEnter: function onEnter(e) {\n        qq.addClass(dropArea, self._classes.dropActive);\n        e.stopPropagation();\n      },\n      onLeave: function onLeave(e) {\n        e.stopPropagation();\n      },\n      onLeaveNotDescendants: function onLeaveNotDescendants(e) {\n        qq.removeClass(dropArea, self._classes.dropActive);\n      },\n      onDrop: function onDrop(e) {\n        dropArea.style.display = 'none';\n        qq.removeClass(dropArea, self._classes.dropActive);\n\n        self._uploadFileList(e.dataTransfer.files);\n      }\n    });\n    dropArea.style.display = 'none';\n    qq.attach(document, 'dragenter', function (e) {\n      if (!dz._isValidFileDrag(e)) return;\n      dropArea.style.display = 'block';\n    });\n    qq.attach(document, 'dragleave', function (e) {\n      if (!dz._isValidFileDrag(e)) return;\n      var relatedTarget = document.elementFromPoint(e.clientX, e.clientY); // only fire when leaving document out\n\n      if (!relatedTarget || relatedTarget.nodeName == \"HTML\") {\n        dropArea.style.display = 'none';\n      }\n    });\n  },\n  _onSubmit: function _onSubmit(id, fileName) {\n    qq.FileUploaderBasic.prototype._onSubmit.apply(this, arguments);\n\n    this._addToList(id, fileName);\n  },\n  _onProgress: function _onProgress(id, fileName, loaded, total) {\n    qq.FileUploaderBasic.prototype._onProgress.apply(this, arguments);\n\n    var item = this._getItemByFileId(id);\n\n    var size = this._find(item, 'size');\n\n    size.style.display = 'inline';\n    var text;\n\n    if (loaded != total) {\n      text = Math.round(loaded / total * 100) + '% from ' + this._formatSize(total);\n    } else {\n      text = this._formatSize(total);\n    }\n\n    qq.setText(size, text);\n  },\n  _onComplete: function _onComplete(id, fileName, result) {\n    qq.FileUploaderBasic.prototype._onComplete.apply(this, arguments); // mark completed\n\n\n    var item = this._getItemByFileId(id);\n\n    qq.remove(this._find(item, 'cancel'));\n    qq.remove(this._find(item, 'spinner'));\n\n    if (result.status && result.status == -1) {\n      qq.addClass(item, this._classes.fail);\n    } else {\n      qq.addClass(item, this._classes.success);\n    }\n  },\n  _addToList: function _addToList(id, fileName) {\n    var item = qq.toElement(this._options.fileTemplate);\n    item.qqFileId = id;\n\n    var fileElement = this._find(item, 'file');\n\n    qq.setText(fileElement, this._formatFileName(fileName));\n\n    var extendedFileElement = this._find(item, 'extendedFileName', true);\n\n    if (extendedFileElement) {\n      qq.setText(extendedFileElement, fileName);\n    }\n\n    this._find(item, 'size').style.display = 'none';\n\n    this._listElement.appendChild(item);\n  },\n  _getItemByFileId: function _getItemByFileId(id) {\n    var item = this._listElement.firstChild; // there can't be txt nodes in dynamically created list\n    // and we can  use nextSibling\n\n    while (item) {\n      if (item.qqFileId == id) return item;\n      item = item.nextSibling;\n    }\n  },\n\n  /**\n   * delegate click event for cancel link\n   **/\n  _bindCancelEvent: function _bindCancelEvent() {\n    var self = this,\n        list = this._listElement;\n    qq.attach(list, 'click', function (e) {\n      e = e || window.event;\n      var target = e.target || e.srcElement;\n\n      if (qq.hasClass(target, self._classes.cancel)) {\n        qq.preventDefault(e);\n        var item = target.parentNode;\n\n        if (qq.hasClass(item, 'complex-layout')) {\n          item = item.parentNode.parentNode.parentNode;\n        }\n\n        self._handler.cancel(item.qqFileId);\n\n        qq.remove(item);\n      }\n    });\n  },\n  _bindCancelAllEvent: function _bindCancelAllEvent() {\n    var self = this,\n        list = this._listElement;\n    $('#uploadFileModal').on('hidden', function () {\n      for (var i = 0, l = list && list.childNodes.length; i < l; i++) {\n        self._handler.cancel(list.childNodes[i].qqFileId);\n      }\n    });\n  }\n});\n\nqq.UploadDropZone = function (o) {\n  this._options = {\n    element: null,\n    onEnter: function onEnter(e) {},\n    onLeave: function onLeave(e) {},\n    // is not fired when leaving element by hovering descendants\n    onLeaveNotDescendants: function onLeaveNotDescendants(e) {},\n    onDrop: function onDrop(e) {}\n  };\n  qq.extend(this._options, o);\n  this._element = this._options.element;\n\n  this._disableDropOutside();\n\n  this._attachEvents();\n};\n\nqq.UploadDropZone.prototype = {\n  _disableDropOutside: function _disableDropOutside(e) {\n    // run only once for all instances\n    if (!qq.UploadDropZone.dropOutsideDisabled) {\n      qq.attach(document, 'dragover', function (e) {\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n          e.preventDefault();\n        }\n      });\n      qq.UploadDropZone.dropOutsideDisabled = true;\n    }\n  },\n  _attachEvents: function _attachEvents() {\n    var self = this;\n    qq.attach(self._element, 'dragover', function (e) {\n      if (!self._isValidFileDrag(e)) return;\n      var effect = e.dataTransfer.effectAllowed;\n\n      if (effect == 'move' || effect == 'linkMove') {\n        e.dataTransfer.dropEffect = 'move'; // for FF (only move allowed)\n      } else {\n        e.dataTransfer.dropEffect = 'copy'; // for Chrome\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    qq.attach(self._element, 'dragenter', function (e) {\n      if (!self._isValidFileDrag(e)) return;\n\n      self._options.onEnter(e);\n    });\n    qq.attach(self._element, 'dragleave', function (e) {\n      if (!self._isValidFileDrag(e)) return;\n\n      self._options.onLeave(e);\n\n      var relatedTarget = document.elementFromPoint(e.clientX, e.clientY); // do not fire when moving a mouse over a descendant\n\n      if (qq.contains(this, relatedTarget)) return;\n\n      self._options.onLeaveNotDescendants(e);\n    });\n    qq.attach(self._element, 'drop', function (e) {\n      if (!self._isValidFileDrag(e)) return;\n      e.preventDefault();\n\n      self._options.onDrop(e);\n    });\n  },\n  _isValidFileDrag: function _isValidFileDrag(e) {\n    var dt = e.dataTransfer; // do not check dt.types.contains in webkit, because it crashes safari 4\n\n    var isWebkit = navigator.userAgent.indexOf(\"AppleWebKit\") > -1;\n    var isIE9 = navigator.appVersion.indexOf(\"MSIE 9\") > -1;\n    if (isIE9) return false; // dt.effectAllowed is none in Safari 5\n    // dt.types.contains check is for firefox\n\n    return dt && dt.effectAllowed != 'none' && (dt.files || !isWebkit && dt.types && dt.types.contains && dt.types.contains('Files'));\n  }\n};\n\nqq.UploadButton = function (o) {\n  this._options = {\n    element: null,\n    // if set to true adds multiple attribute to file input\n    multiple: false,\n    // name attribute of file input\n    name: 'file',\n    onChange: function onChange(input) {},\n    hoverClass: 'qq-upload-button-hover',\n    focusClass: 'qq-upload-button-focus'\n  };\n  qq.extend(this._options, o);\n  this._element = this._options.element; // make button suitable container for input\n\n  qq.css(this._element, {\n    position: 'relative',\n    overflow: 'hidden',\n    // Make sure browse button is in the right side\n    // in Internet Explorer\n    direction: 'ltr'\n  });\n  this._input = this._createInput();\n};\n\nqq.UploadButton.prototype = {\n  /* returns file input element */\n  getInput: function getInput() {\n    return this._input;\n  },\n\n  /* cleans/recreates the file input */\n  reset: function reset() {\n    if (this._input.parentNode) {\n      qq.remove(this._input);\n    }\n\n    qq.removeClass(this._element, this._options.focusClass);\n    this._input = this._createInput();\n  },\n  _createInput: function _createInput() {\n    var input = document.createElement(\"input\");\n\n    if (this._options.multiple) {\n      input.setAttribute(\"multiple\", \"multiple\");\n    }\n\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"name\", this._options.name);\n    qq.css(input, {\n      position: 'absolute',\n      // in Opera only 'browse' button\n      // is clickable and it is located at\n      // the right side of the input\n      right: 0,\n      top: 0,\n      fontFamily: 'Arial',\n      // 4 persons reported this, the max values that worked for them were 243, 236, 236, 118\n      fontSize: '118px',\n      margin: 0,\n      padding: 0,\n      cursor: 'pointer',\n      opacity: 0\n    });\n\n    this._element.appendChild(input);\n\n    var self = this;\n    qq.attach(input, 'change', function () {\n      self._options.onChange(input);\n    });\n    qq.attach(input, 'mouseover', function () {\n      qq.addClass(self._element, self._options.hoverClass);\n    });\n    qq.attach(input, 'mouseout', function () {\n      qq.removeClass(self._element, self._options.hoverClass);\n    });\n    qq.attach(input, 'focus', function () {\n      qq.addClass(self._element, self._options.focusClass);\n    });\n    qq.attach(input, 'blur', function () {\n      qq.removeClass(self._element, self._options.focusClass);\n    }); // IE and Opera, unfortunately have 2 tab stops on file input\n    // which is unacceptable in our case, disable keyboard access\n\n    if (window.attachEvent) {\n      // it is IE or Opera\n      input.setAttribute('tabIndex', \"-1\");\n    }\n\n    return input;\n  }\n};\n/**\n * Class for uploading files, uploading itself is handled by child classes\n */\n\nqq.UploadHandlerAbstract = function (o) {\n  this._options = {\n    debug: false,\n    action: '/upload.php',\n    // maximum number of concurrent uploads\n    maxConnections: 999,\n    onProgress: function onProgress(id, fileName, loaded, total) {},\n    onComplete: function onComplete(id, fileName, response) {},\n    onCancel: function onCancel(id, fileName) {}\n  };\n  qq.extend(this._options, o);\n  this._queue = []; // params for files in queue\n\n  this._params = [];\n};\n\nqq.UploadHandlerAbstract.prototype = {\n  log: function log(str) {\n    if (this._options.debug && window.console) console.log('[uploader] ' + str);\n  },\n\n  /**\n   * Adds file or file input to the queue\n   * @returns id\n   **/\n  add: function add(file) {},\n\n  /**\n   * Sends the file identified by id and additional query params to the server\n   */\n  upload: function upload(id, params) {\n    var len = this._queue.push(id);\n\n    var copy = {};\n    qq.extend(copy, params);\n    this._params[id] = copy; // if too many active uploads, wait...\n\n    if (len <= this._options.maxConnections) {\n      this._upload(id, this._params[id]);\n    }\n  },\n\n  /**\n   * Cancels file upload by id\n   */\n  cancel: function cancel(id) {\n    this._cancel(id);\n\n    this._dequeue(id);\n  },\n\n  /**\n   * Cancells all uploads\n   */\n  cancelAll: function cancelAll() {\n    for (var i = 0; i < this._queue.length; i++) {\n      this._cancel(this._queue[i]);\n    }\n\n    this._queue = [];\n  },\n\n  /**\n   * Returns name of the file identified by id\n   */\n  getName: function getName(id) {},\n\n  /**\n   * Returns size of the file identified by id\n   */\n  getSize: function getSize(id) {},\n\n  /**\n   * Returns id of files being uploaded or\n   * waiting for their turn\n   */\n  getQueue: function getQueue() {\n    return this._queue;\n  },\n\n  /**\n   * Actual upload method\n   */\n  _upload: function _upload(id) {},\n\n  /**\n   * Actual cancel method\n   */\n  _cancel: function _cancel(id) {},\n\n  /**\n   * Removes element from queue, starts upload of next\n   */\n  _dequeue: function _dequeue(id) {\n    var i = qq.indexOf(this._queue, id);\n\n    this._queue.splice(i, 1);\n\n    var max = this._options.maxConnections;\n\n    if (this._queue.length >= max && i < max) {\n      var nextId = this._queue[max - 1];\n\n      this._upload(nextId, this._params[nextId]);\n    }\n  }\n};\n/**\n * Class for uploading files using form and iframe\n * @inherits qq.UploadHandlerAbstract\n */\n\nqq.UploadHandlerForm = function (o) {\n  qq.UploadHandlerAbstract.apply(this, arguments);\n  this._inputs = {};\n}; // @inherits qq.UploadHandlerAbstract\n\n\nqq.extend(qq.UploadHandlerForm.prototype, qq.UploadHandlerAbstract.prototype);\nqq.extend(qq.UploadHandlerForm.prototype, {\n  add: function add(fileInput) {\n    fileInput.setAttribute('name', 'qqfile');\n    var id = 'qq-upload-handler-iframe' + qq.getUniqueId();\n    this._inputs[id] = fileInput; // remove file input from DOM\n\n    if (fileInput.parentNode) {\n      qq.remove(fileInput);\n    }\n\n    return id;\n  },\n  getName: function getName(id) {\n    // get input value and remove path to normalize\n    return this._inputs[id].value.replace(/.*(\\/|\\\\)/, \"\");\n  },\n  _cancel: function _cancel(id) {\n    if (this._inputs[id]) {\n      this._options.onCancel(id, this.getName(id));\n    }\n\n    delete this._inputs[id];\n    var iframe = document.getElementById(id);\n\n    if (iframe) {\n      // to cancel request set src to something else\n      // we use src=\"javascript:false;\" because it doesn't\n      // trigger ie6 prompt on https\n      iframe.setAttribute('src', 'javascript:false;');\n      qq.remove(iframe);\n    }\n  },\n  _upload: function _upload(id, params) {\n    var input = this._inputs[id];\n\n    if (!input) {\n      throw new Error('file with passed id was not added, or already uploaded or cancelled');\n    }\n\n    var fileName = this.getName(id);\n\n    var iframe = this._createIframe(id);\n\n    var form = this._createForm(iframe, params);\n\n    input.name = params.fileFieldLabel;\n    form.appendChild(input);\n    var dest = document.createElement('input');\n    dest.type = 'text';\n    dest.name = 'dest';\n    dest.value = params.dest;\n    form.appendChild(dest);\n    var csrfmiddlewaretoken = document.createElement('input');\n    csrfmiddlewaretoken.type = 'hidden';\n    csrfmiddlewaretoken.name = 'csrfmiddlewaretoken';\n    csrfmiddlewaretoken.value = \"${request and request.COOKIES.get('csrftoken', '')}\";\n    form.appendChild(csrfmiddlewaretoken);\n    var self = this;\n\n    this._attachLoadEvent(iframe, function () {\n      self.log('iframe loaded');\n\n      var response = self._getIframeContentJSON(iframe);\n\n      self._options.onComplete(id, fileName, response);\n\n      self._dequeue(id);\n\n      delete self._inputs[id]; // timeout added to fix busy state in FF3.6\n\n      setTimeout(function () {\n        qq.remove(iframe);\n      }, 1);\n    });\n\n    form.submit();\n    qq.remove(form);\n    return id;\n  },\n  _attachLoadEvent: function _attachLoadEvent(iframe, callback) {\n    qq.attach(iframe, 'load', function () {\n      // when we remove iframe from dom\n      // the request stops, but in IE load\n      // event fires\n      if (!iframe.parentNode) {\n        return;\n      } // fixing Opera 10.53\n\n\n      if (iframe.contentDocument && iframe.contentDocument.body && iframe.contentDocument.body.innerHTML == \"false\") {\n        // In Opera event is fired second time\n        // when body.innerHTML changed from false\n        // to server response approx. after 1 sec\n        // when we upload file with iframe\n        return;\n      }\n\n      callback();\n    });\n  },\n\n  /**\n   * Returns json object received by iframe from server.\n   */\n  _getIframeContentJSON: function _getIframeContentJSON(iframe) {\n    // iframe.contentWindow.document - for IE<7\n    var doc = iframe.contentDocument ? iframe.contentDocument : iframe.contentWindow.document,\n        response;\n    this.log(\"converting iframe's innerHTML to JSON\");\n    this.log(\"innerHTML = \" + $(doc.body.innerHTML).text());\n\n    try {\n      response = eval(\"(\" + $(doc.body.innerHTML).text() + \")\");\n    } catch (err) {\n      response = {};\n    }\n\n    return response;\n  },\n\n  /**\n   * Creates iframe with unique name\n   */\n  _createIframe: function _createIframe(id) {\n    // We can't use following code as the name attribute\n    // won't be properly registered in IE6, and new window\n    // on form submit will open\n    // var iframe = document.createElement('iframe');\n    // iframe.setAttribute('name', id);\n    var iframe = qq.toElement('<iframe src=\"javascript:false;\" name=\"' + id + '\"></iframe>'); // src=\"javascript:false;\" removes ie6 prompt on https\n\n    iframe.setAttribute('id', id);\n    iframe.style.display = 'none';\n    document.body.appendChild(iframe);\n    return iframe;\n  },\n\n  /**\n   * Creates form, that will be submitted to iframe\n   */\n  _createForm: function _createForm(iframe, params) {\n    // We can't use the following code in IE6\n    // var form = document.createElement('form');\n    // form.setAttribute('method', 'post');\n    // form.setAttribute('enctype', 'multipart/form-data');\n    // Because in this case file won't be attached to request\n    var form = qq.toElement('<form method=\"post\" enctype=\"multipart/form-data\"></form>');\n    form.setAttribute('action', this._options.action);\n    form.setAttribute('target', iframe.name);\n    form.style.display = 'none';\n    document.body.appendChild(form);\n    return form;\n  }\n});\n/**\n * Class for uploading files using xhr\n * @inherits qq.UploadHandlerAbstract\n */\n\nqq.UploadHandlerXhr = function (o) {\n  qq.UploadHandlerAbstract.apply(this, arguments);\n  this._files = [];\n  this._xhrs = []; // current loaded size in bytes for each file\n\n  this._loaded = [];\n}; // static method\n\n\nqq.UploadHandlerXhr.isSupported = function () {\n  var input = document.createElement('input');\n  input.type = 'file';\n  return 'multiple' in input && typeof File != \"undefined\" && typeof new XMLHttpRequest().upload != \"undefined\";\n}; // @inherits qq.UploadHandlerAbstract\n\n\nqq.extend(qq.UploadHandlerXhr.prototype, qq.UploadHandlerAbstract.prototype);\nqq.extend(qq.UploadHandlerXhr.prototype, {\n  /**\n   * Adds file to the queue\n   * Returns id to use with upload, cancel\n   **/\n  add: function add(file) {\n    // HUE-815: [fb] Upload button does not work in Firefox 3.6\n    // see https://github.com/valums/ajax-upload/issues/91\n    //if (!(file instanceof File)){\n    if (!(file instanceof File || file.__proto__ && file.__proto__.constructor.name == 'File' || file instanceof Object)) {\n      throw new Error('Passed obj in not a File (in qq.UploadHandlerXhr)');\n    }\n\n    return this._files.push(file) - 1;\n  },\n  getName: function getName(id) {\n    var file = this._files[id]; // fix missing name in Safari 4\n\n    return file && (file.fileName || file.name);\n  },\n  getSize: function getSize(id) {\n    var file = this._files[id];\n    return file && (file.fileSize || file.size);\n  },\n\n  /**\n   * Returns uploaded bytes for file identified by id\n   */\n  getLoaded: function getLoaded(id) {\n    return this._loaded[id] || 0;\n  },\n\n  /**\n   * Sends the file identified by id and additional query params to the server\n   * @param {Object} params name-value string pairs\n   */\n  _upload: function _upload(id, params) {\n    var file = this._files[id],\n        name = this.getName(id),\n        size = this.getSize(id);\n    this._loaded[id] = 0;\n    var xhr = this._xhrs[id] = new XMLHttpRequest();\n    var self = this;\n\n    xhr.upload.onprogress = function (e) {\n      if (e.lengthComputable) {\n        self._loaded[id] = e.loaded;\n\n        self._options.onProgress(id, name, e.loaded, e.total);\n      }\n    };\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        self._onComplete(id, xhr);\n      }\n    };\n\n    var formData = new FormData();\n    formData.append(params.fileFieldLabel, file);\n    formData.append('dest', params.dest);\n    var action = this._options.action + \"?dest=\" + params.dest;\n    xhr.open(\"POST\", action, true);\n    xhr.send(formData);\n  },\n  _onComplete: function _onComplete(id, xhr) {\n    // the request was aborted/cancelled\n    if (!this._files[id]) return;\n    var name = this.getName(id);\n    var size = this.getSize(id);\n\n    this._options.onProgress(id, name, size, size);\n\n    if (xhr.status == 200) {\n      this.log(\"xhr - server response received\");\n      this.log(\"responseText = \" + xhr.responseText);\n      var response;\n\n      try {\n        response = eval(\"(\" + xhr.responseText + \")\");\n      } catch (err) {\n        response = {};\n      }\n\n      this._options.onComplete(id, name, response);\n    } else {\n      this._options.onComplete(id, name, xhr);\n    }\n\n    this._files[id] = null;\n    this._xhrs[id] = null;\n\n    this._dequeue(id);\n  },\n  _cancel: function _cancel(id) {\n    if (this._files[id]) {\n      this._options.onCancel(id, this.getName(id));\n    }\n\n    this._files[id] = null;\n\n    if (this._xhrs[id]) {\n      this._xhrs[id].abort();\n\n      this._xhrs[id] = null;\n    }\n  }\n});\nexport default qq;"],"mappingssourceRoot":""}